
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================
//`define ENABLE_DDR3

module SoCKit_ADA(

	//////////// CLOCK //////////
	OSC_50_B3B,
	OSC_50_B4A,
	OSC_50_B5B,
	OSC_50_B8A,

	//////////// LED //////////
	LED,

	//////////// KEY //////////
	KEY,
	RESET_n,

	//////////// SW //////////
	SW,

	//////////// Si5338 //////////
	SI5338_SCL,
	SI5338_SDA,

	//////////// Temperature //////////
	TEMP_CS_n,
	TEMP_DIN,
	TEMP_DOUT,
	TEMP_SCLK,

	//////////// VGA //////////
	VGA_B,
	VGA_BLANK_n,
	VGA_CLK,
	VGA_G,
	VGA_HS,
	VGA_R,
	VGA_SYNC_n,
	VGA_VS,

	//////////// Audio //////////
	AUD_ADCDAT,
	AUD_ADCLRCK,
	AUD_BCLK,
	AUD_DACDAT,
	AUD_DACLRCK,
	AUD_MUTE,
	AUD_XCK,

	//////////// I2C for Audio  //////////
	AUD_I2C_SCLK,
	AUD_I2C_SDAT,

	//////////// IR Receiver //////////
	IRDA_RXD,

`ifdef ENABLE_DDR3
	//////////// SDRAM //////////
	DDR3_A,
	DDR3_BA,
	DDR3_CAS_n,
	DDR3_CK_n,
	DDR3_CK_p,
	DDR3_CKE,
	DDR3_CS_n,
	DDR3_DM,
	DDR3_DQ,
	DDR3_DQS_n,
	DDR3_DQS_p,
	DDR3_ODT,
	DDR3_RAS_n,
	DDR3_RESET_n,
	DDR3_RZQ,
	DDR3_WE_n,
	
`endif /*ENABLE_DDR3*/

	//////////// HSMC, HSMC connect to ADA - High Speed ADC/DAC //////////
	ADA_SCL,
	ADA_SDA,
	ADC_CLK_A,
	ADC_CLK_B,
	ADC_DA,
	ADC_DB,
	ADC_OEB_A,
	ADC_OEB_B,
	ADC_OTR_A,
	ADC_OTR_B,
	DAC_CLK_A,
	DAC_CLK_B,
	DAC_DA,
	DAC_DB,
	DAC_MODE,
	DAC_WRT_A,
	DAC_WRT_B,
	OSC_SMA_ADC4,
	SMA_DAC4 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		OSC_50_B3B;
input 		          		OSC_50_B4A;
input 		          		OSC_50_B5B;
input 		          		OSC_50_B8A;

//////////// LED //////////
output		     [3:0]		LED;

//////////// KEY //////////
input 		     [3:0]		KEY;
input 		          		RESET_n;

//////////// SW //////////
input 		     [3:0]		SW;

//////////// Si5338 //////////
output		          		SI5338_SCL;
inout 		          		SI5338_SDA;

//////////// Temperature //////////
output		          		TEMP_CS_n;
output		          		TEMP_DIN;
input 		          		TEMP_DOUT;
output		          		TEMP_SCLK;

//////////// VGA //////////
output		     [7:0]		VGA_B;
output		          		VGA_BLANK_n;
output		          		VGA_CLK;
output		     [7:0]		VGA_G;
output		          		VGA_HS;
output		     [7:0]		VGA_R;
output		          		VGA_SYNC_n;
output		          		VGA_VS;

//////////// Audio //////////
input 		          		AUD_ADCDAT;
inout 		          		AUD_ADCLRCK;
inout 		          		AUD_BCLK;
output		          		AUD_DACDAT;
inout 		          		AUD_DACLRCK;
output		          		AUD_MUTE;
output		          		AUD_XCK;

//////////// I2C for Audio  //////////
output		          		AUD_I2C_SCLK;
inout 		          		AUD_I2C_SDAT;

//////////// IR Receiver //////////
input 		          		IRDA_RXD;

`ifdef ENABLE_DDR3
//////////// SDRAM //////////
output		    [14:0]		DDR3_A;
output		     [2:0]		DDR3_BA;
output		          		DDR3_CAS_n;
output		          		DDR3_CK_n;
output		          		DDR3_CK_p;
output		          		DDR3_CKE;
output		          		DDR3_CS_n;
output		     [3:0]		DDR3_DM;
inout 		    [31:0]		DDR3_DQ;
inout 		     [3:0]		DDR3_DQS_n;
inout 		     [3:0]		DDR3_DQS_p;
output		          		DDR3_ODT;
output		          		DDR3_RAS_n;
output		          		DDR3_RESET_n;
input 		          		DDR3_RZQ;
output		          		DDR3_WE_n;
`endif /*ENABLE_DDR3*/

//////////// HSMC, HSMC connect to ADA - High Speed ADC/DAC //////////
output		          		ADA_SCL;
inout 		          		ADA_SDA;
output		          		ADC_CLK_A;
output		          		ADC_CLK_B;
input 		    [13:0]		ADC_DA;
input 		    [13:0]		ADC_DB;
output		          		ADC_OEB_A;
output		          		ADC_OEB_B;
input 		          		ADC_OTR_A;
input 		          		ADC_OTR_B;
output		          		DAC_CLK_A;
output		          		DAC_CLK_B;
output		    [13:0]		DAC_DA;
output		    [13:0]		DAC_DB;
output		          		DAC_MODE;
output		          		DAC_WRT_A;
output		          		DAC_WRT_B;
input 		          		OSC_SMA_ADC4;
input 		          		SMA_DAC4;


//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================
C5S_ADDA C5S_ADDA_ins
(
                         .CLOCK_50(OSC_50_B8A),
                         .ADC_CLK_A(ADC_CLK_A),
								 .ADC_CLK_B(ADC_CLK_B),
								 .ADC_DA(ADC_DA),
								 .ADC_DB(ADC_DB),
								 .ADC_OEB_A(ADC_OEB_A),
								 .ADC_OEB_B(ADC_OEB_B),
								 .ADC_OTR_A(ADC_OTR_A),
								 .ADC_OTR_B(ADC_OTR_B),
								 .DAC_CLK_A(DAC_CLK_A),
								 .DAC_CLK_B(DAC_CLK_B),
								 .DAC_DA(DAC_DA),
								 .DAC_DB(DAC_DB),
								 .DAC_MODE(DAC_MODE),
								 .DAC_WRT_A(DAC_WRT_A),
								 .DAC_WRT_B(DAC_WRT_B),
								 .OSC_SMA_ADC4(OSC_SMA_ADC4),
								 .SMA_DAC4(SMA_DAC4) 
);


endmodule




